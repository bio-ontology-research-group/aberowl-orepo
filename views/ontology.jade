extends layout

block title
  title AberOWL: #{ontology.name}
  <meta name="fragment" content="!">
  meta(name='keywords', content='aberowl aber-owl ontology repository OWL reasoning ontology-based data access biomedical ontologies bio-ontology bio-ontologies')
  meta(name='description', content='#{ontology.description}')
  link(rel="icon" href="http://aber-owl.net/favicon.png")
  link(rel='stylesheet', href='/css/base.css')
  link(rel='stylesheet', href='/css/style.min.css')
  link(rel='stylesheet', href='/css/d3.css')
  link(rel='stylesheet', href='/css/bootstrap-theme.min.css')
  link(rel='stylesheet', href='/css/jquery-ui.css')
  link(rel='stylesheet', href='/css/style.css')
  link(rel='stylesheet', href='/css/bootstrap-multiselect.css')
  <script> window.prerenderReady = false; </script>

block append scripts
  script(src='/js/jquery-2.1.3.min.js')
  script(src='/js/jquery-ui.min.js')
  script(src='/js/jstree.min.js')
  script(src='/js/bootstrap.min.js')
  script(src='/js/bootstrap-table.min.js')
  script(src='/js/bootstrap-multiselect.js')
  script(src='/js/bootstrap-spinner.js')
  script(src='/js/jquery.dataTables.min.js')
  script(src='/js/d3.min.js')
  script(src='/js/d3.tip.v0.6.3.js')
  script(src='/js/dom.js')
  script(src='/js/dom-parser.js')
  script(src='/js/sax.js')
  script(src='/js/query.js')
  script(src='/js/pubmed.js')
  script(src='/js/openlifedata.js')
  script(src='/js/manage.js')
  script(src='/js/tree.js')
  script(src='/js/browse.js')
  script(src='/js/sparql.js')
  script(src='/js/objectproperty_tree.js')

//  script(async src='/js/ontology.js')
  // script(src='/js/jquery-2.1.3.min.js')
  // script(src='/js/jstree.min.js')
  // script(src='/js/jquery.tagsinput.js')
  // script(src='/js/bootstrap.min.js')
  // script(src='/js/jquery.dataTables.min.js')
  // script(src='/js/jquery-ui.min.js')
  // script(src='/js/d3.min.js')
  // script(src='/js/d3.tip.v0.6.3.js')
  // script(src='/js/query.js')
  // script(src='/js/quicksearch.js')
  // script(src='/js/pubmed.js')
  // script(src='/js/openlifedata.js')
  // script(src='/js/manage.js')
  // script(src='/js/tree.js')
  // script(src='/js/objectproperty_tree.js')
  // script(src='/js/browse.js')
  // script(src='/js/sparql.js')
  // script(src='/js/bootstrap-multiselect.js')
  // script(src='/js/bootstrap-spinner.js')
  // script(src='/js/dataTables.bootstrap.min.js')

block content
  .container-fluid
    .row
      .col-sm-4.col-md-3.sidebar
        div.nav.nav-sidebar
          li
            a(href='/ontology/') 
              span.glyphicon.glyphicon-menu-left(aria-hidden='true') 
              span Back to Browse
          li.divider(role='presentation', style="background-color:#aaa;display:block;height:5px;")
        input#quicksearch(type="text" style="margin:10px;width=100%;")
        br
        div#left_tree &nbsp;
        br
        label Object properties
        div#left_tree_objectproperty &nbsp;
     .col-sm-8.col-sm-offset-4.col-md-9.col-md-offset-3.main
        div(style='float:right')
          -if(messages.info) 
            div.alert.alert-success(role='alert')
              span.glyphicon.glyphicon-ok(aria-hidden='true')
              span &nbsp; Info: #{messages.info}
          -if(!stats.loaded)
          -if(ontology.status)
            -if(ontology.status.status == 'untested')
              span#loadstatus.label.label-info Loading
            -else if(ontology.status.status != 'classified')
              span#loadstatus.label.label-danger #{ontology.status.status}: #{ontology.status.message}
            -else
              span#loadstatus.label.label-sm.label-success Classified
          -else
              span#loadstatus.label.label-sm.label-default Unknown

        h1.page-header #{ontology.id} - #{ontology.name}
        h2#wat
        div#tabs
          ul
            li
              a(href='#overview') Overview
            li
              a(href='#browse') Browse
            li
              a(href='#query') DL Query
            li
              a(href='#visualise') Visualise
            li
              a(href='#pubmed') PubMed
            li
              a(href='#data') Data
            li
              a(href='#sparql') SPARQL
            li
              a(href='#downloads') Download
            -if(user && (user.admin || (user.owns && user.owns.indexOf(ontology.id) != -1)))
              li
                a(href='#manage') Manage
          div#overview
            h5.sub-header #{ontology.description}
            h2.sub-header Ontology metadata
            .table-responsive
              table.table.table-striped
                tbody
                  -if(ontology.homepage)
                    tr
                      td Homepage
                      td 
                        a(href=ontology.homepage) #{ontology.homepage}
                  -if(ontology.contact)
                    - var ocont = ontology.contact.join(', ');
                    tr
                      td Contact
                      td #{ocont}
                  -if(ontology.topics)
                    tr
                      - var otops = ontology.topics.map(function(e) { return e[1].replace(/\'/g,''); }).join(', ');
                      td Topics
                      td #{otops}
                  -if(ontology.species)
                    tr
                      - var ospec = ontology.species.join(', ');
                      td Species
                      td #{ospec}
                  tr
                    td Class Count
                    td #{stats.classCount}
                  tr
                    td Unsatisfiable classes
                    td #{stats.unsatisfiableClassesCount}
                  -if(stats.annotations)
                    for val, prop in stats.annotations
                      tr
                        td #{prop}
                        td 
                          pre !{val}
          div#browse
            div#browse_content
          div#downloads
            .table-responsive
              table.table.table-striped
                thead
                  tr
                    th Date 
                    th Download
                tbody
                  - var oKeys = Object.keys(ontology.submissions).sort().reverse()
                  for time in oKeys
                    - dl = ontology.submissions[time]
                    - time = new Date(parseInt(time)*1000).toUTCString()
                    tr
                      td #{time}
                      td 
                        a(href='/onts/'+dl) Download...
          div#query
            center
              input#autocomplete.form-control(style='width:100%', placeholder='Enter Manchester OWL Syntax Query')
              input(name='type', type='radio', value='supeq') 
              label Super- and Equivalent classes
              input(name='type', type='radio', value='superclass') 
              label Superclasses
              input(name='type', type='radio', value='equivalent' checked='true') 
              label Equivalent classes
              input(name='type', type='radio', value='subclass') 
              label Subclasses
              input(name='type', type='radio', value='subeq') 
              label Sub- and Equivalent classes
              br
              a#button.btn.btn.btn-default(onclick='query=document.getElementById(\'autocomplete\').value;redrawTable();') Query

            table#example.table.table-striped
              thead
                tr
                  th OWL Class
                  th Ontology
                  th Label
                  th Definition
            div#ontology_value(style="display:none") #{ontology.id}

          div#pubmed
            center
              input#pubmed_autocomplete.form-control(style='width:100%', placeholder='Enter Manchester OWL Syntax Query')
              input(name='type', type='radio', value='supeq') 
              label Super- and Equivalent classes
              input(name='type', type='radio', value='supclass') 
              label Superclasses
              input(name='type', type='radio', value='equivalent') 
              label Equivalent classes
              input(name='type', type='radio', value='subclass') 
              label Subclasses
              input(name='type', type='radio', value='subeq' checked='true') 
              label Sub- and Equivalent classes
              br
              a#pubmed_button.btn.btn.btn-default(onclick='query=document.getElementById(\'pubmed_autocomplete\').value;redrawPubmedTable();') Query
            table#pubmed_results.table.table-striped
              thead
                tr
                  th Title
                  th Abstract
            div#ontology_value(style="display:none") #{ontology.id}

          div#data
            center
              input#data_autocomplete.form-control(style='width:100%', placeholder='Enter Manchester OWL Syntax Query')
              input(name='type', type='radio', value='supeq') 
              label Super- and Equivalent classes
              input(name='type', type='radio', value='supclass') 
              label Superclasses
              input(name='type', type='radio', value='equivalent') 
              label Equivalent classes
              input(name='type', type='radio', value='subclass') 
              label Subclasses
              input(name='type', type='radio', value='subeq' checked='true') 
              label Sub- and Equivalent classes
              br
              a#data_button.btn.btn.btn-default(onclick='query=document.getElementById(\'data_autocomplete\').value;redrawDataTable();') Query
            table#data_results.table.table-striped
              thead
                tr
                  th Label
                  th Description
                  th Dataset
                  th Datatype(s)

            div#ontology_value(style="display:none") #{ontology.id}

          div#sparql
            div#radio
              button.btn.btn-default(onclick="changeSPARQLQuery('values');" type="radio" id="radio1" name="radio" value="values" checked="checked") Use in VALUES statement
              button.btn.btn-default(onclick="changeSPARQLQuery('filter');" type="radio" id="radio2" name="radio" value="filter") Use in FILTER statement
            br
            a(style='float:right;color:#1C94C4;' href='http://aber-owl.net/aber-owl/sparql/') See examples...
            textarea#squery(name='sparqlquery' cols='80' rows='15')
            p Use OBO-style URIs:  
              input(type='checkbox', name'short', id='short')
            p SPARQL Endpoint URI:
              input#endpoint(type='text')
            input#qtype(type='hidden' value='values')
            button.btn.btn-default(onclick='sendSPARQLQuery()') Submit

            table#sparql_results.table.table-striped

            div#ontology_value(style='display:none') #{ontology.id}

          div#visualise
            div#visualisation
              div#table_properties(style='float:left;width:30%;margin: 50px;')
                table
                  tbody
                    tr
                      td
                        fieldset
                          legend Versions
                          p
                            select#versions.multiselect(multiple='multiple')
                              -var keys = Object.keys(ontology.submissions)
                              -keys.sort() // order the keys, something to take into account in the server.
                              -var versions = []
                              -index = keys.length
                              -while (index>0) {
                                -var date = new Date(parseInt(keys[index-1])*1000);
                                option(value='#{index-1}') Version #{index+" ("+date.getFullYear()+"-"+date.getMonth()+"-"+date.getDay()+")"}
                                -if(index === keys.length)
                                  -versions.push(index-1)//We just add the actual version that will be located at the last position.
                                -else
                                  -versions.push(null)
                                -index--
                              -}
                      td
                        fieldset
                          legend Properties
                          p
                            select#properties.multiselect(multiple='multiple')
              div#table_properties(style='float:left;width:10%;margin: 50px;')
                label(style='display:inline-block;text-align: center;') Number of classes
                div.input-group
                  span.input-group-btn
                    button.btn.btn-default(type="button",data-value="decrease",data-target="#spinner",data-toggle="spinner")
                      span.glyphicon.glyphicon-minus
                  input#spinner.form-control.input-number(type="text",data-ride="spinner",data-min="1")
                  span.input-group-btn
                    button.btn.btn-default(type="button",data-value="increase",data-target="#spinner",data-toggle="spinner")
                      span.glyphicon.glyphicon-plus
              div#table_properties(style='float:left;width:10%;margin: 50px;')
                button#exportSVG.btn.btn-default() Export to SVG
                button#exportViz.btn.btn-default() Export to GraphViz
            div#infovis(style='width:100%')            
            div#ontology_value(style='display:none') #{ontology.id}
            div#num_versions(style='display:none') #{JSON.stringify(versions)}

          -if(user && (user.admin || (user.owns && user.owns.indexOf(ontology.id) != -1)))
            div#manage
              -if(messages.info) 
                div.alert.alert-success(role='alert')
                  span.glyphicon.glyphicon-ok(aria-hidden='true')
                  span &nbsp; Info: #{messages.info}
              form.form(action='/ontology/#{ontology.id}/update', method='post', role='form')
                h5 Name
                input.form-control(name='name', type='name', value='#{ontology.name}', required='', autofocus='')
                br
                h5 Description
                textarea.form-control(name='description', type='description', required='', autofocus='') #{ontology.description}
                br
                button.btn.btn-default(type='submit') Save

              h3.sub-header Updates
                h5 Current update method: 
                  -if(ontology.source == 'bioportal' || ontology.source == 'manual')
                    div#osource.label.label-success(href='#', data-placement='bottom', data-original-title='wat', data-content='test', rel='popover', data-trigger='hover') #{ontology.source}
                      &nbsp;
                  -else 
                    div#osource.label.label-success(href='#', data-placement='bottom', data-original-title='wat', data-content='test', rel='popover', data-trigger='hover') Updating directly from: #{ontology.source}
                      &nbsp;
                  a(href='#', onclick='openSourceForm()') change...
                  div#sourceForm
              a.btn.btn-sm.btn-warning(style='margin-left:10px', href='#', onclick='openVersionForm()', role='button') 
                span Manually Upload New Version&nbsp;
                span.glyphicon.glyphicon-upload(aria-hidden='true') 
              div#versionForm

              h3.sub-header Remove Ontology From Repository
              form.form(action='/ontology/#{ontology.id}/delete', method='post', role='form')
                button.btn.btn-danger(type='submit') Delete Ontology
        div#ontology_value(style='display:none') #{ontology.id}
        +footer
